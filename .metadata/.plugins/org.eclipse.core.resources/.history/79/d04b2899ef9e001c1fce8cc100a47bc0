package SequenceList;

public class LinkList<T> {
	private int N = 0;// Á´±í³¤¶È

	Node head = null;

	class Node{
		T value;
		Node next;
		public Node(T value, Node next) {
			this.value = value;
			this.next = next;
		}
	}

	public LinkList() {
		this.N = 0;
		this.head = new Node(null,null);
	}
	public void add(T t) {
		Node n=head;
		while(n.next!=null) {
			n=n.next;
		}
		n.next=new Node(t,null);
		N++;
	}
	public void claer() {
		head.next=null;
	}
	public boolean isEmpty() {
		return N==0;
	}
	public int length() {
		return N;
	}
	public T get(int index) {
		Node n=head;
		for(int i=0;i<index;i++) {
			n=n.next;
		}
		return n.value;
	}
	public void insert(int index,T t) {
		Node n=head;
		for(int i=0;i<index;i++) {
			n=n.next;
		}
		n.next=new Node(t,n.next);
		N++;
	}
	public T remove(int index) {
		Node pre=head;
		for(int i=0;i<index-1;i++) {
			pre=pre.next;
		}
		Node n=pre.next;
		pre.next=n.next;	
		return n.value;
	}
	public int indexOf(T t) {
		Node n=head;
		int i=0;
		while(n!=null) {
			if(n.value.equals(t))
				return i;
			i++;
			n=n.next;
		}
		
	}
}
