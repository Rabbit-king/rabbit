package second;

//给定一个包含非负整数的 m x n 网格 grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。
//说明：每次只能向下或者向右移动一步。

public class second {

}

class Solution {
    public int minPathSum(int[][] grid) {
    	int i=0;
    	int j=0;
    	
    	return minpath(grid,i,j);
    }
    
    public int minpath(int[][] grid,int i,int j) {
		int imax=grid.length-1;
		int jmax=grid[0].length-1;
		int max=0;
		if(i>=imax&&j>=jmax)
			return grid[i][j];
		if(i>=imax) {
			minpath(grid,i,j+1);
			return grid[i][j];
		}
		if(j>=jmax) {
			minpath(grid,i+1,j);
			return grid[i][j];
		}
		
		if(i<imax&&j<jmax) {
			max=
		}
    	
    	return 0;
	}
}
