package Heapsort;

public class Heapsort<T extends Comparable<T>> {
	Comparable<T> data[]=null;
	int N=0;

	public Heapsort(T[] a) {
		this.data=new Comparable[a.length+1];
		for(int i=1;i<=this.data.length;i++) {
			data[i]=a[i-1];
		}
		N = a.length;
	}
	public void BeHeap(){
		for(int i=N-1;i>0;i--){
			if(less(data[i/2-1],data[i]))
				exchange(i/2-1,i);
		}
	}	
	public boolean less(Comparable<T> w, Comparable<T> v) {
		return w.compareTo((T)v) < 0;
	}
	public void exchange(int i, int j) {
		Comparable<T> temp;
		temp = data[i];
		data[i] = data[j];
		data[j] = temp;
	}
	public void print() {
		for(int i=0;i<N;i++) {
			System.out.print(data[i]+" ");
		}
	}
}
