package quicksort;

public class quick {
	public boolean less(Comparable w,Comparable v) {
		return w.compareTo(v)<0;
	}
	
	public void exch(Comparable[] a,int i,int j) {
		Comparable t=a[i];
		a[i]=a[j];
		a[j]=t;
	}
	
	public void sort(Comparable[] a) {
		int low=0;
		int height=a.length-1;
		
		sort(a,low,height);
	}
	
	public void sort(Comparable[] a,int low,int height) {
		if(height>=low)
			return ;
		
		int par=par(a,low,height);
		sort(a,low,par-1);
		sort(a,par+1,height);
	}
	
	public int par(Comparable[] a,int low,int height) {
		int left=low;
		int right=height+1;
		Comparable key= a[low];
		
		while(right!=left) {
			while(less(a[++left],key)&&left<=right) {
				if(left==height)
					break;
			}
			while(less(key,a[--height])&&left<=right) {
				if(height==low) 
					break;
			}
			
			exch(a,left,right);
		}
		return left;		
	}
}
